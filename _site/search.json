[
  {
    "objectID": "competition.html",
    "href": "competition.html",
    "title": "about me",
    "section": "",
    "text": "MarkDown Basics",
    "crumbs": [
      "Competition"
    ]
  },
  {
    "objectID": "competition.html#title-2-header",
    "href": "competition.html#title-2-header",
    "title": "about me",
    "section": "",
    "text": "MarkDown Basics",
    "crumbs": [
      "Competition"
    ]
  },
  {
    "objectID": "Cleansing_Projects/project3.html",
    "href": "Cleansing_Projects/project3.html",
    "title": "Client Report - [Insert Project Title]",
    "section": "",
    "text": "Paste in a template\n\n\n\n\n Back to top",
    "crumbs": [
      "Data Cleansing",
      "Project 3"
    ]
  },
  {
    "objectID": "Cleansing_Projects/project1.html",
    "href": "Cleansing_Projects/project1.html",
    "title": "Client Report - [Insert Project Title]",
    "section": "",
    "text": "Paste in a template\n\n\n\n\n Back to top",
    "crumbs": [
      "Data Cleansing",
      "Project 1"
    ]
  },
  {
    "objectID": "Cleansing_Projects/project4.html",
    "href": "Cleansing_Projects/project4.html",
    "title": "Client Report - [Insert Project Title]",
    "section": "",
    "text": "Paste in a template\n\n\n\n\n Back to top",
    "crumbs": [
      "Data Cleansing",
      "Project 4"
    ]
  },
  {
    "objectID": "Full_Stack/project2.html",
    "href": "Full_Stack/project2.html",
    "title": "Client Report - [Insert Project Title]",
    "section": "",
    "text": "Paste in a template\n\n\n\n\n Back to top",
    "crumbs": [
      "Full Stack",
      "Project 2"
    ]
  },
  {
    "objectID": "Full_Stack/project5.html",
    "href": "Full_Stack/project5.html",
    "title": "Client Report - [Insert Project Title]",
    "section": "",
    "text": "Paste in a template\n\n\n\n\n Back to top",
    "crumbs": [
      "Full Stack",
      "Project 5"
    ]
  },
  {
    "objectID": "Competition/project3.html",
    "href": "Competition/project3.html",
    "title": "Client Report - [Insert Project Title]",
    "section": "",
    "text": "Paste in a template\n\n\n\n\n Back to top",
    "crumbs": [
      "Competition",
      "Project 3"
    ]
  },
  {
    "objectID": "Competition/project1.html",
    "href": "Competition/project1.html",
    "title": "Client Report - [Insert Project Title]",
    "section": "",
    "text": "Paste in a template\n\n\n\n\n Back to top",
    "crumbs": [
      "Competition",
      "Project 1"
    ]
  },
  {
    "objectID": "Competition/project4.html",
    "href": "Competition/project4.html",
    "title": "Client Report - [Insert Project Title]",
    "section": "",
    "text": "Paste in a template\n\n\n\n\n Back to top",
    "crumbs": [
      "Competition",
      "Project 4"
    ]
  },
  {
    "objectID": "Cleansing_Exploration/project2.html",
    "href": "Cleansing_Exploration/project2.html",
    "title": "Client Report - [Insert Project Title]",
    "section": "",
    "text": "Paste in a template\n\n\n\n\n Back to top"
  },
  {
    "objectID": "Cleansing_Exploration/project5.html",
    "href": "Cleansing_Exploration/project5.html",
    "title": "Client Report - [Insert Project Title]",
    "section": "",
    "text": "Paste in a template\n\n\n\n\n Back to top"
  },
  {
    "objectID": "story_telling.html",
    "href": "story_telling.html",
    "title": "about me",
    "section": "",
    "text": "MarkDown Basics",
    "crumbs": [
      "Story Telling"
    ]
  },
  {
    "objectID": "story_telling.html#title-2-header",
    "href": "story_telling.html#title-2-header",
    "title": "about me",
    "section": "",
    "text": "MarkDown Basics",
    "crumbs": [
      "Story Telling"
    ]
  },
  {
    "objectID": "index.html",
    "href": "index.html",
    "title": "about me",
    "section": "",
    "text": "MarkDown Basics"
  },
  {
    "objectID": "index.html#title-2-header",
    "href": "index.html#title-2-header",
    "title": "about me",
    "section": "",
    "text": "MarkDown Basics"
  },
  {
    "objectID": "Machine_Learning/project2.html",
    "href": "Machine_Learning/project2.html",
    "title": "Client Report - [Insert Project Title]",
    "section": "",
    "text": "Paste in a template\n\n\n\n\n Back to top",
    "crumbs": [
      "Machine Learning",
      "Project 2"
    ]
  },
  {
    "objectID": "Machine_Learning/project5.html",
    "href": "Machine_Learning/project5.html",
    "title": "Client Report - [Insert Project Title]",
    "section": "",
    "text": "Paste in a template\n\n\n\n\n Back to top",
    "crumbs": [
      "Machine Learning",
      "Project 5"
    ]
  },
  {
    "objectID": "cleansing.html",
    "href": "cleansing.html",
    "title": "about me",
    "section": "",
    "text": "MarkDown Basics",
    "crumbs": [
      "Data Cleansing"
    ]
  },
  {
    "objectID": "cleansing.html#title-2-header",
    "href": "cleansing.html#title-2-header",
    "title": "about me",
    "section": "",
    "text": "MarkDown Basics",
    "crumbs": [
      "Data Cleansing"
    ]
  },
  {
    "objectID": "exploration.html",
    "href": "exploration.html",
    "title": "about me",
    "section": "",
    "text": "MarkDown Basics",
    "crumbs": [
      "Data Exploration"
    ]
  },
  {
    "objectID": "exploration.html#title-2-header",
    "href": "exploration.html#title-2-header",
    "title": "about me",
    "section": "",
    "text": "MarkDown Basics",
    "crumbs": [
      "Data Exploration"
    ]
  },
  {
    "objectID": "Story_Telling/project2.html",
    "href": "Story_Telling/project2.html",
    "title": "Client Report - [Insert Project Title]",
    "section": "",
    "text": "Paste in a template\n\n\n\n\n Back to top",
    "crumbs": [
      "Story Telling",
      "Project 2"
    ]
  },
  {
    "objectID": "Story_Telling/project5.html",
    "href": "Story_Telling/project5.html",
    "title": "Client Report - [Insert Project Title]",
    "section": "",
    "text": "Paste in a template\n\n\n\n\n Back to top",
    "crumbs": [
      "Story Telling",
      "Project 5"
    ]
  },
  {
    "objectID": "Story_Telling/project4.html",
    "href": "Story_Telling/project4.html",
    "title": "Client Report - [Insert Project Title]",
    "section": "",
    "text": "Paste in a template\n\n\n\n\n Back to top",
    "crumbs": [
      "Story Telling",
      "Project 4"
    ]
  },
  {
    "objectID": "Story_Telling/project1.html",
    "href": "Story_Telling/project1.html",
    "title": "Client Report - [Insert Project Title]",
    "section": "",
    "text": "Paste in a template\n\n\n\n\n Back to top",
    "crumbs": [
      "Story Telling",
      "Project 1"
    ]
  },
  {
    "objectID": "Story_Telling/project3.html",
    "href": "Story_Telling/project3.html",
    "title": "Client Report - [Insert Project Title]",
    "section": "",
    "text": "Paste in a template\n\n\n\n\n Back to top",
    "crumbs": [
      "Story Telling",
      "Project 3"
    ]
  },
  {
    "objectID": "resume.html",
    "href": "resume.html",
    "title": "Jason McGraw’s CV",
    "section": "",
    "text": "Computer Science Student\n\ntaartplant@gmail.com \n\n\n\nStudying to become a Computer Scientist\n\n\nMachine Learning\n\n\n\nFood, Relationships, Geology, Entertainment\n\n\n\n\nSeptember 2024 - now Brigham Young University, Idaho \n\n\n\n2019 Eagle Scout\n2019 Growth Mindset Award | Acquired March 22, 2019"
  },
  {
    "objectID": "resume.html#currently",
    "href": "resume.html#currently",
    "title": "Jason McGraw’s CV",
    "section": "",
    "text": "Studying to become a Computer Scientist\n\n\nMachine Learning\n\n\n\nFood, Relationships, Geology, Entertainment"
  },
  {
    "objectID": "resume.html#education",
    "href": "resume.html#education",
    "title": "Jason McGraw’s CV",
    "section": "",
    "text": "September 2024 - now Brigham Young University, Idaho"
  },
  {
    "objectID": "resume.html#awards",
    "href": "resume.html#awards",
    "title": "Jason McGraw’s CV",
    "section": "",
    "text": "2019 Eagle Scout\n2019 Growth Mindset Award | Acquired March 22, 2019"
  },
  {
    "objectID": "resume.html#publications",
    "href": "resume.html#publications",
    "title": "Isaac Newtons’s CV",
    "section": "",
    "text": "1669 Newton Sir I, De analysi per æquationes numero terminorum infinitas.\n1669 Lectiones opticæ.\netc. etc. etc.\n\n\n\n2012 Infinitesimal calculus for solutions to physics problems, SMBC patent 001"
  },
  {
    "objectID": "resume.html#occupation",
    "href": "resume.html#occupation",
    "title": "Isaac Newtons’s CV",
    "section": "",
    "text": "1600 Royal Mint, London\n\nWarden\nMinted coins\n\n1600 Lucasian professor of Mathematics, Cambridge University"
  },
  {
    "objectID": "Machine_Learning/project4.html",
    "href": "Machine_Learning/project4.html",
    "title": "Client Report - [Insert Project Title]",
    "section": "",
    "text": "Paste in a template\n\n\n\n\n Back to top",
    "crumbs": [
      "Machine Learning",
      "Project 4"
    ]
  },
  {
    "objectID": "Machine_Learning/project1.html",
    "href": "Machine_Learning/project1.html",
    "title": "Client Report - What Do People See in Romance?",
    "section": "",
    "text": "Have you ever wondered what you could do to increase your chances of getting a date? What makes someone desireable? I’m here to answer those questions using data science! The first question I would like to ask is…\n\nWhat variables are important to getting asked out?\nIn order to answer this question I’m going to use a machine learning model to take in data, then I’ll have it tell us what factors went into it’s predicitons. Follow me.\n\n\nShow the code\n## Import libraries and data frame.\nimport numpy as np\nimport pandas as pd\nfrom lets_plot import *\n\ndf = pd.read_csv(\"https://raw.githubusercontent.com/datasets/speed-dating/refs/heads/main/data/speed-dating.csv\")\n# Information of data set https://www.openml.org/search?type=data&sort=runs&id=40536&status=active\nLetsPlot.setup_html()\n\n\n\n            \n            \n            \n\n\n\n\nShow the code\n## Make a new data frame using the data I want to test for.\n# pref_o* = the preference of thier partner (0-100)\n# attractive and other rows = how they see themselves (0-10)\n# decision_o* = whether or not the partner asked them out (yes or no)\nself_rate = df[['pref_o_attractive'\n              , 'pref_o_sincere'\n              , 'pref_o_intelligence'\n              , 'pref_o_funny'\n              , 'pref_o_ambitious'\n            #  , 'pref_o_shared_interests'\n              , 'attractive'\n              , 'sincere'\n              , 'intelligence'\n              , 'funny'\n              , 'ambition'\n              , 'decision_o'\n              ]]\n\n\n\n\nShow the code\n## Data clean up\nself_rate.iloc[:,0:5] = self_rate.iloc[:,0:5].apply(lambda x: x / 10)\n\n\n\n\nShow the code\n## Split data into train and test sections for machine learning.\nimport sklearn\nfrom sklearn.model_selection import train_test_split\n\nx = self_rate.drop(columns = ['decision_o'])\ny = self_rate['decision_o']\n\nx_train, x_test, y_train, y_test = train_test_split(x, y, test_size = .2)\n# CHANGE don't include random state in final project\n\n\n\n\nShow the code\n## Teach machine learning model using the train values.\nfrom sklearn.ensemble import RandomForestClassifier\n\nclassifier = RandomForestClassifier() # what classifier I'm using, and it's params\n\nclassifier.fit(x_train, y_train) # what the classifier is testing(x_train) and predicting(y_train)\n\n\nRandomForestClassifier()In a Jupyter environment, please rerun this cell to show the HTML representation or trust the notebook. On GitHub, the HTML representation is unable to render, please try loading this page with nbviewer.org.RandomForestClassifier?Documentation for RandomForestClassifieriFittedRandomForestClassifier() \n\n\nBelow is the accuracy of the machine learning model. The numbers by the 1 is how good the model is at predicting if someone got asked out, and the numbers by the 0 is the model’s ability to predict if someone didn’t get asked out. So, the model is better at predicting if someone didn’t get asked out. This will play a role in the data later.\n\n\nShow the code\n## Show accuracy of the model.\npredictions = classifier.predict(x_test)\n\nfrom sklearn.metrics import classification_report\n\nprint(classification_report(y_test, predictions))\n\n\n              precision    recall  f1-score   support\n\n           0       0.68      0.78      0.73       997\n           1       0.59      0.46      0.52       679\n\n    accuracy                           0.65      1676\n   macro avg       0.63      0.62      0.62      1676\nweighted avg       0.64      0.65      0.64      1676\n\n\n\n\n\nShow the code\n## Show what variables were most important for the model.\nfeatures = x.columns\nimportance = classifier.feature_importances_\ndata_group = {'Feature': features, 'Importance': importance}\n\nimportance_chart = pd.DataFrame(data_group)\nimportance_chart = importance_chart.sort_values('Importance').head(10)\n\n\nBelow is a graph showing which features were most important to predict whether or not someone was asked out after speed dating. The variables titled ‘pref_o_…’ are traits the Dater’s partner said they were looking for, and the other traits are what the Dater rated themself out of 10.\n\n\nShow the code\n## Graph the importance levels to show what variables were most important.\n(\n  ggplot(importance_chart, aes('Importance', 'Feature')) \n  + geom_bar(stat = 'identity')\n  + labs(\n    title='Predictive Variables For Being Asked Out'\n  )\n)\n\n\n   \n   \n\n\nThis graph shows that the preferences of someone’s partner durring speed dating were a better predictor on how likely they were to being asked out, rather than how they saw themselves. In other words “Beauty is in the eye of the beholder” applies to speed dating. But this graph doesn’t show what traits are more desirable than others. Let’s explore that next.\n\n\nDo people who rate themselves highly on desireable traits get asked out more?\n\n\nShow the code\n## Isolate the self proclaimed attributes (such as how attractive someone thinks they are)\nself_proclaim = self_rate\nself_proclaim['average of proclaimed attributes'] = self_rate.loc[:,self_rate.iloc[:,5:10].columns].sum(axis = 1)\n\n\n\n\nShow the code\n## Make a chart with the mean values of people that got asked out VS. people that didn't.\nself_proclaim =self_proclaim.groupby('decision_o', as_index=False).mean()\n\n\nself_proclaim['decision of partner'] = self_proclaim['decision_o'].apply(lambda x: 'yes' if x == 1 else 'no')\n\nself_proclaim[['decision of partner', 'average of proclaimed attributes']]\n\n\n\n\n\n\n\n\n\ndecision of partner\naverage of proclaimed attributes\n\n\n\n\n0\nno\n38.487353\n\n\n1\nyes\n38.700711\n\n\n\n\n\n\n\nThe above Table shows the mean number of all the traits someone rated themselves with (out of how attractive, sincere, intelligent, funny, and ambitious they were) grouped by whether or not they were asked out. It shows that the people that rated themselves high on those traits were just as likely to get asked out as the people that rated themselves low. This means that when speed dating the ammount of people that ask you out isn’t dependent on what kind of person you think you are. Which means that if you’re self consious and beat yourself up, don’t. You’re still just as attractive to speed daters.\n\n\n\n\n Back to top",
    "crumbs": [
      "Machine Learning",
      "Project 1"
    ]
  },
  {
    "objectID": "Machine_Learning/project3.html",
    "href": "Machine_Learning/project3.html",
    "title": "Client Report - [Insert Project Title]",
    "section": "",
    "text": "Paste in a template\n\n\n\n\n Back to top",
    "crumbs": [
      "Machine Learning",
      "Project 3"
    ]
  },
  {
    "objectID": "ml.html",
    "href": "ml.html",
    "title": "about me",
    "section": "",
    "text": "MarkDown Basics",
    "crumbs": [
      "Machine Learning"
    ]
  },
  {
    "objectID": "ml.html#title-2-header",
    "href": "ml.html#title-2-header",
    "title": "about me",
    "section": "",
    "text": "MarkDown Basics",
    "crumbs": [
      "Machine Learning"
    ]
  },
  {
    "objectID": "Cleansing_Exploration/project4.html",
    "href": "Cleansing_Exploration/project4.html",
    "title": "Client Report - [Insert Project Title]",
    "section": "",
    "text": "Paste in a template\n\n\n\n\n Back to top"
  },
  {
    "objectID": "Cleansing_Exploration/project1.html",
    "href": "Cleansing_Exploration/project1.html",
    "title": "Client Report - [Insert Project Title]",
    "section": "",
    "text": "Paste in a template\n\n\n\n\n Back to top"
  },
  {
    "objectID": "Cleansing_Exploration/project3.html",
    "href": "Cleansing_Exploration/project3.html",
    "title": "Client Report - [Insert Project Title]",
    "section": "",
    "text": "Paste in a template\n\n\n\n\n Back to top"
  },
  {
    "objectID": "Competition/project5.html",
    "href": "Competition/project5.html",
    "title": "Client Report - [Insert Project Title]",
    "section": "",
    "text": "Paste in a template\n\n\n\n\n Back to top",
    "crumbs": [
      "Competition",
      "Project 5"
    ]
  },
  {
    "objectID": "Competition/project2.html",
    "href": "Competition/project2.html",
    "title": "Client Report - [Insert Project Title]",
    "section": "",
    "text": "Paste in a template\n\n\n\n\n Back to top",
    "crumbs": [
      "Competition",
      "Project 2"
    ]
  },
  {
    "objectID": "Full_Stack/project4.html",
    "href": "Full_Stack/project4.html",
    "title": "Client Report - [Insert Project Title]",
    "section": "",
    "text": "Paste in a template\n\n\n\n\n Back to top",
    "crumbs": [
      "Full Stack",
      "Project 4"
    ]
  },
  {
    "objectID": "Full_Stack/project1.html",
    "href": "Full_Stack/project1.html",
    "title": "Client Report - [Insert Project Title]",
    "section": "",
    "text": "Paste in a template\n\n\n\n\n Back to top",
    "crumbs": [
      "Full Stack",
      "Project 1"
    ]
  },
  {
    "objectID": "Full_Stack/project3.html",
    "href": "Full_Stack/project3.html",
    "title": "Client Report - [Insert Project Title]",
    "section": "",
    "text": "Paste in a template\n\n\n\n\n Back to top",
    "crumbs": [
      "Full Stack",
      "Project 3"
    ]
  },
  {
    "objectID": "Cleansing_Projects/project5.html",
    "href": "Cleansing_Projects/project5.html",
    "title": "Client Report - [Insert Project Title]",
    "section": "",
    "text": "Paste in a template\n\n\n\n\n Back to top",
    "crumbs": [
      "Data Cleansing",
      "Project 5"
    ]
  },
  {
    "objectID": "Cleansing_Projects/project2.html",
    "href": "Cleansing_Projects/project2.html",
    "title": "Client Report - [Insert Project Title]",
    "section": "",
    "text": "Paste in a template\n\n\n\n\n Back to top",
    "crumbs": [
      "Data Cleansing",
      "Project 2"
    ]
  },
  {
    "objectID": "full_stack.html",
    "href": "full_stack.html",
    "title": "about me",
    "section": "",
    "text": "MarkDown Basics",
    "crumbs": [
      "Full Stack"
    ]
  },
  {
    "objectID": "full_stack.html#title-2-header",
    "href": "full_stack.html#title-2-header",
    "title": "about me",
    "section": "",
    "text": "MarkDown Basics",
    "crumbs": [
      "Full Stack"
    ]
  },
  {
    "objectID": "Machine_Learning/project1.html#import-libraries-and-data-frame.",
    "href": "Machine_Learning/project1.html#import-libraries-and-data-frame.",
    "title": "Client Report - What Do People See in Romance?",
    "section": "",
    "text": "Show the code\nimport numpy as np\nimport pandas as pd\nfrom lets_plot import *\n\ndf = pd.read_csv(\"https://raw.githubusercontent.com/datasets/speed-dating/refs/heads/main/data/speed-dating.csv\")\n# Information of data set https://www.openml.org/search?type=data&sort=runs&id=40536&status=active\nLetsPlot.setup_html()",
    "crumbs": [
      "Machine Learning",
      "Project 1"
    ]
  },
  {
    "objectID": "Machine_Learning/project1.html#make-a-new-data-frame-using-the-data-i-want-to-test-for.",
    "href": "Machine_Learning/project1.html#make-a-new-data-frame-using-the-data-i-want-to-test-for.",
    "title": "Client Report - What Do People See in Romance?",
    "section": "Make a new data frame using the data I want to test for.",
    "text": "Make a new data frame using the data I want to test for.",
    "crumbs": [
      "Machine Learning",
      "Project 1"
    ]
  },
  {
    "objectID": "Machine_Learning/project1.html#data-clean-up",
    "href": "Machine_Learning/project1.html#data-clean-up",
    "title": "Client Report - What Do People See in Romance?",
    "section": "Data clean up",
    "text": "Data clean up\n\n\nShow the code\nself_rate.iloc[:,0:5] = self_rate.iloc[:,0:5].apply(lambda x: x / 10)\n\nself_rate.head()\n\n\n\n\n\n\n\n\n\npref_o_attractive\npref_o_sincere\npref_o_intelligence\npref_o_funny\npref_o_ambitious\nattractive\nsincere\nintelligence\nfunny\nambition\ndecision_o\n\n\n\n\n0\n3.5\n2.0\n2.0\n2.0\n0.0\n6.0\n8.0\n8.0\n8.0\n7.0\n0\n\n\n1\n6.0\n0.0\n0.0\n4.0\n0.0\n6.0\n8.0\n8.0\n8.0\n7.0\n0\n\n\n2\n1.9\n1.8\n1.9\n1.8\n1.4\n6.0\n8.0\n8.0\n8.0\n7.0\n1\n\n\n3\n3.0\n0.5\n1.5\n4.0\n0.5\n6.0\n8.0\n8.0\n8.0\n7.0\n1\n\n\n4\n3.0\n1.0\n2.0\n1.0\n1.0\n6.0\n8.0\n8.0\n8.0\n7.0\n1",
    "crumbs": [
      "Machine Learning",
      "Project 1"
    ]
  },
  {
    "objectID": "Machine_Learning/project1.html#split-data-into-train-and-test-sections-for-machine-learning.",
    "href": "Machine_Learning/project1.html#split-data-into-train-and-test-sections-for-machine-learning.",
    "title": "Client Report - What Do People See in Romance?",
    "section": "Split data into train and test sections for machine learning.",
    "text": "Split data into train and test sections for machine learning.\n\n\nShow the code\nimport sklearn\nfrom sklearn.model_selection import train_test_split\n\nx = self_rate.drop(columns = ['decision_o'])\ny = self_rate['decision_o']\n\nx_train, x_test, y_train, y_test = train_test_split(x, y, test_size = .2)\n# CHANGE don't include random state in final project",
    "crumbs": [
      "Machine Learning",
      "Project 1"
    ]
  },
  {
    "objectID": "Machine_Learning/project1.html#teach-machine-learning-model-using-the-train-values.",
    "href": "Machine_Learning/project1.html#teach-machine-learning-model-using-the-train-values.",
    "title": "Client Report - What Do People See in Romance?",
    "section": "Teach machine learning model using the train values.",
    "text": "Teach machine learning model using the train values.\n\n\nShow the code\nfrom sklearn.ensemble import RandomForestClassifier\n\nclassifier = RandomForestClassifier() # what classifier I'm using, and it's params\n\nclassifier.fit(x_train, y_train) # what the classifier is testing(x_train) and predicting(y_train)\n\n\nRandomForestClassifier()In a Jupyter environment, please rerun this cell to show the HTML representation or trust the notebook. On GitHub, the HTML representation is unable to render, please try loading this page with nbviewer.org.RandomForestClassifier?Documentation for RandomForestClassifieriFittedRandomForestClassifier()",
    "crumbs": [
      "Machine Learning",
      "Project 1"
    ]
  },
  {
    "objectID": "Machine_Learning/project1.html#show-accuracy-of-the-model.",
    "href": "Machine_Learning/project1.html#show-accuracy-of-the-model.",
    "title": "Client Report - What Do People See in Romance?",
    "section": "Show accuracy of the model.",
    "text": "Show accuracy of the model.\n\n\nShow the code\npredictions = classifier.predict(x_test)\n\nfrom sklearn.metrics import classification_report\n\nprint(classification_report(y_test, predictions))\n\n\n              precision    recall  f1-score   support\n\n           0       0.66      0.78      0.71       969\n           1       0.60      0.45      0.52       707\n\n    accuracy                           0.64      1676\n   macro avg       0.63      0.62      0.61      1676\nweighted avg       0.63      0.64      0.63      1676",
    "crumbs": [
      "Machine Learning",
      "Project 1"
    ]
  },
  {
    "objectID": "Machine_Learning/project1.html#show-what-variables-were-most-important-for-the-model.",
    "href": "Machine_Learning/project1.html#show-what-variables-were-most-important-for-the-model.",
    "title": "Client Report - What Do People See in Romance?",
    "section": "Show what variables were most important for the model.",
    "text": "Show what variables were most important for the model.\n\n\nShow the code\n# Include and execute your code here\nfeatures = x.columns\nimportance = classifier.feature_importances_\ndata_group = {'Feature': features, 'Importance': importance}\n\nimportance_chart = pd.DataFrame(data_group)\nimportance_chart = importance_chart.sort_values('Importance').head(10)",
    "crumbs": [
      "Machine Learning",
      "Project 1"
    ]
  },
  {
    "objectID": "Machine_Learning/project1.html#graph-the-importance-levels-to-show-what-variables-were-most-important.",
    "href": "Machine_Learning/project1.html#graph-the-importance-levels-to-show-what-variables-were-most-important.",
    "title": "Client Report - What Do People See in Romance?",
    "section": "Graph the importance levels to show what variables were most important.",
    "text": "Graph the importance levels to show what variables were most important.\n\n\nShow the code\n(\n  ggplot(importance_chart, aes('Importance', 'Feature')) \n  + geom_bar(stat = 'identity')\n  + labs(\n    title='Predictive Variables For Being Asked Out'\n  )\n)\n\n\n   \n   \n\n\nThis graph shows that the preferences of someone’s partner durring speed dating were a better predictor on how likely they were to being asked out, than how they saw themselves. “Beauty is in the eye of the beholder.”\nDo people who rate themselves highly on desireable traits get asked out more?\n\n\nShow the code\n# Isolate the self proclaimed attributes (such as how attractive someone thinks they are)\nself_proclaim = self_rate\nself_proclaim['proclaimed attributes'] = self_rate.loc[:,self_rate.iloc[:,5:10].columns].sum(axis = 1)\n\n\n\n\nShow the code\n# Make a chart with the mean values of people that got asked out VS. people that didn't.\nself_proclaim =self_proclaim.groupby('decision_o', as_index=False).mean()\n\n\nself_proclaim['decision of partner'] = self_proclaim['decision_o'].apply(lambda x: 'yes' if x == 1 else 'no')\n\nself_proclaim[['decision of partner', 'proclaimed attributes']]\n\n\n\n\n\n\n\n\n\ndecision of partner\nproclaimed attributes\n\n\n\n\n0\nno\n38.487353\n\n\n1\nyes\n38.700711\n\n\n\n\n\n\n\nThe above Table shows the mean number of all the traits someone rated themselves with (out of how attractive, sincere, intelligent, funny, and ambitious they were) grouped by whether or not they were asked out. It shows that the people that rated themselves high on those traits were just as likely to get asked out as the people that rated themselves low. This means that when speed dating the ammount of people that ask you out isn’t dependent on what kind of person you think you are.",
    "crumbs": [
      "Machine Learning",
      "Project 1"
    ]
  }
]